{"version":3,"sources":["App.module.css","../../src/hooks/useRBLSetter.js","../../src/hooks/useRBLState.js","../../src/hooks/useRBLValue.js","../../src/utils/hooks/useValueSetter.js","../../src/utils/hooks/useValue.js","../../src/utils/hooks/useLevels.js","../../src/utils/toArrayIfNeeded.js","../../src/utils/getByLevels.js","../../src/utils/setByLevels.js","../../src/providers/RBLProvider.js","../../src/redux-by-levels-context.js","count.js","name.js","App.js","store.js","../../src/utils/get-reducer.js","index.js"],"names":["module","exports","useRBLSetter","level","levels","useLevels","useValueSetter","useRBLState","useRBLValue","useValue","dispatch","useDispatch","prevValue","useRef","useCallback","levelsToUpdate","toArrayIfNeeded","type","payload","value","selectorCallback","state","getByLevels","useSelector","levelsToAppend","contextLevels","useContext","useMemo","stringOrArray","Array","obj","path","setByLevels","assocPath","dissocPath","RBLProvider","children","RBLContext","createContext","Count","count","setCount","onClick","Name","name","setName","defaultValue","onChange","target","App","className","styles","src","theme","iconStyle","store","createStore","initialState","levelsAfterRoot","action","valueToSet","getRBLReducer","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,IAAM,mB,0KCCXC,EAAe,SAAAC,GAC1B,IAAMC,EAASC,EAAf,GACA,OAAOC,EAAP,ICDWC,EAAc,SAAAJ,GAAK,MAAI,CAACK,EAAD,GAAqBN,EAAzB,KCDnBM,EAAc,SAAAL,GACzB,IAAMC,EAASC,EAAf,GACA,OAAOI,EAAP,ICAWH,EAAiB,SAAAF,GAC5B,IAAMM,EAAWC,cACXC,EAAYC,mBAclB,OAbiBC,uBACf,cACE,GAAIF,YAAJ,EAAiC,CAC/BA,YACA,IAAMG,EAAiBZ,EAAQ,GAAH,SAAkBa,EAAlB,IAA5B,EACAN,EAAS,CACPO,KAAMb,OADC,KAEPc,QAAS,CAAEd,OAAF,EAA0Be,cAIzC,CAACT,EAXH,KCHWD,EAAW,SAAAL,GACtB,IAAMgB,EAAmBN,uBAAY,SAAAO,GAAK,OAAIC,EAAYD,EAAhB,KAAgC,CAA1E,IAEA,OADcE,YAAd,ICHWlB,EAAY,SAACF,QAAe,IAAfA,MAAQ,IAChC,IAAMqB,EAAiBR,EAAvB,GACMS,EAAgBC,yBAAtB,GAKA,OAJeC,mBAAQ,kCAA6C,CAAC,EAArE,KCNWX,EAAkB,SAAAY,GAAa,OAC1CC,wBAA+CD,MAA8B,CAA9BA,GADL,ICE/BN,EAAc,SAACQ,EAAK1B,GAC/B,OAAO2B,YAAK3B,EAAZ,ICDW4B,EAAc,SAACF,EAAK1B,EAAQe,GACvC,YAAOA,MAAsBc,YAAU7B,EAAQe,EAAxCA,GAAsDe,YAAW9B,EAAxE,ICAW+B,EAAc,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,SAAUjC,EAAY,EAAZA,MAChCqB,EAAiBR,EAAvB,GACMZ,EAASsB,yBAAf,GACA,OACE,kBAACW,EAAD,UAAqBlB,MAAK,gBAD5B,ICJWkB,EAAaC,0B,yBCMXC,MALf,WAAkB,IAAD,EACWhC,IADX,mBACRiC,EADQ,KACDC,EADC,KAEf,OAAO,4BAAQC,QAAS,IAAMD,EAASD,EAAQ,IAAxC,WAAqDA,I,iBCW/CG,EAbF,KAAO,IAAD,EACOpC,IADP,mBACVqC,EADU,KACJC,EADI,KAEjB,OACE,6BACE,2BACEC,aAAcF,EACdG,SAAU,EAAGC,QAAU7B,YAAc0B,EAAQ1B,KAE/C,sCAAYyB,KCaHK,MAff,WACE,IAAM5B,EAAQb,IACd,OACE,yBAAK0C,UAAWC,IAAOF,KACrB,kBAAC,IAAD,CAAWG,IAAK/B,EAAOgC,MAAM,MAAMC,UAAU,WAC7C,kBAAC,EAAD,CAAanD,MAAM,SACjB,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAaA,MAAM,QACjB,kBAAC,EAAD,S,eCXOoD,EAFDC,YCHe,SAACC,EAAD,QAA4C,IAA3CA,MAAe,SAA4B,IAAxBC,MAAkB,GAUjE,OATgB,SAACrC,EAAD,GAAkC,iBAAjCA,MAAQoC,GACvB,IAAMrD,EAAM,OAAGuD,QAAH,IAAGA,GAAH,UAAGA,EAAH,gCAAGA,EAAH,2BAAGA,QAAf,GACA,KAAY,OACJxC,EAAK,OAAGwC,QAAH,IAAGA,GAAH,UAAGA,EAAH,4BAAGA,EAAd,MACMC,EAA8B,oBAAVzC,EAAuBA,EAAMG,EAAYD,EAAhD,IAAnB,EACA,OAAOW,EAAYX,EAAOjB,EAA1B,GAEF,UDLsByD,CAFL,CAAErB,MAAO,EAAGI,KAAM,SEKvCkB,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,OAEFS,SAASC,eAAe,W","file":"static/js/main.c1971b23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import { useLevels, useValueSetter } from \"../\";\n\nexport const useRBLSetter = level => {\n  const levels = useLevels(level);\n  return useValueSetter(levels);\n};\n","import { useRBLSetter } from \"./useRBLSetter\";\nimport { useRBLValue } from \"../\";\n\nexport const useRBLState = level => [useRBLValue(level), useRBLSetter(level)];\n","import { useValue, useLevels } from \"../\";\n\nexport const useRBLValue = level => {\n  const levels = useLevels(level);\n  return useValue(levels);\n};\n","import { useCallback, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toArrayIfNeeded } from \"../\";\n\nexport const useValueSetter = levels => {\n  const dispatch = useDispatch();\n  const prevValue = useRef();\n  const setValue = useCallback(\n    (value, level) => {\n      if (prevValue.current !== value) {\n        prevValue.current = value;\n        const levelsToUpdate = level ? [...levels, ...toArrayIfNeeded(level)] : levels;\n        dispatch({\n          type: levels.join(\"_\"),\n          payload: { levels: levelsToUpdate, value }\n        });\n      }\n    },\n    [dispatch, levels]\n  );\n  return setValue;\n};\n","import { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getByLevels } from \"../../\";\n\nexport const useValue = levels => {\n  const selectorCallback = useCallback(state => getByLevels(state, levels), [levels]);\n  const value = useSelector(selectorCallback);\n  return value;\n};\n","import { useContext, useMemo } from \"react\";\nimport { toArrayIfNeeded, RBLContext } from \"../../\";\n\nexport const useLevels = (level = []) => {\n  const levelsToAppend = toArrayIfNeeded(level);\n  const contextLevels = useContext(RBLContext) || [];\n  const levels = useMemo(() => [...contextLevels, ...levelsToAppend], [\n    contextLevels,\n    levelsToAppend\n  ]);\n  return levels;\n};\n","export const toArrayIfNeeded = stringOrArray =>\n  Array.isArray(stringOrArray) ? stringOrArray : stringOrArray !== undefined ? [stringOrArray] : [];\n","import { path } from \"ramda\";\n\nexport const getByLevels = (obj, levels) => {\n  return path(levels, obj);\n};\n","import { assocPath, dissocPath } from \"ramda\";\n\nexport const setByLevels = (obj, levels, value) => {\n  return value !== undefined ? assocPath(levels, value, obj) : dissocPath(levels, obj);\n};\n","import React, { useContext } from \"react\";\nimport { RBLContext, toArrayIfNeeded } from \"../\";\n\nexport const RBLProvider = ({ children, level }) => {\n  const levelsToAppend = toArrayIfNeeded(level);\n  const levels = useContext(RBLContext) || [];\n  return (\n    <RBLContext.Provider value={[...levels, ...levelsToAppend]}>{children}</RBLContext.Provider>\n  );\n};\n","import { createContext } from \"react\";\n\nexport const RBLContext = createContext();\n","import React from 'react'\nimport { useRBLState } from 'redux-by-levels'\n\nfunction Count() {\n  const [count, setCount] = useRBLState()\n  return <button onClick={() => setCount(count + 1)}>count - {count}</button>\n}\n\nexport default Count\n","import React from 'react'\nimport { useRBLState } from 'redux-by-levels'\n\nconst Name = () => {\n  const [name, setName] = useRBLState()\n  return (\n    <div>\n      <input\n        defaultValue={name}\n        onChange={({ target: { value } }) => setName(value)}\n      />\n      <h3>name - {name}</h3>\n    </div>\n  )\n}\n\nexport default Name\n","import React from 'react'\nimport { RBLProvider, useRBLValue } from 'redux-by-levels'\nimport ReactJson from 'react-json-view'\n\nimport Count from './count'\n\nimport styles from './App.module.css'\nimport Name from './name'\n\nfunction App() {\n  const state = useRBLValue()\n  return (\n    <div className={styles.App}>\n      <ReactJson src={state} theme='pop' iconStyle='square' />\n      <RBLProvider level='count'>\n        <Count />\n      </RBLProvider>\n      <RBLProvider level='name'>\n        <Name />\n      </RBLProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore } from 'redux'\nimport { getRBLReducer } from 'redux-by-levels'\n\nconst initialState = { count: 0, name: 'foo' }\n\nconst store = createStore(getRBLReducer(initialState))\n\nexport default store\n","import { getByLevels,setByLevels } from \"../\";\n\nexport const getRBLReducer = (initialState = {}, levelsAfterRoot = 0) => {\n  const reducer = (state = initialState, action) => {\n    const levels = action?.payload?.levels?.slice(levelsAfterRoot);\n    if (levels) {\n      const value = action?.payload?.value;\n      const valueToSet = typeof value === \"function\" ? value(getByLevels(state, levels)) : value;\n      return setByLevels(state, levels, valueToSet);\n    }\n    return state;\n  };\n  return reducer;\n};\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}